import jsPDF from 'jspdf';
import { Report, Category } from '@shared/schema';

export function generateReportPDF(report: Report, category?: Category) {
  const doc = new jsPDF();
  
  // Set up the document
  doc.setFontSize(20);
  doc.text('CivicReport - Issue Report', 20, 30);
  
  // Add a line
  doc.setLineWidth(0.5);
  doc.line(20, 35, 190, 35);
  
  let yPosition = 50;
  
  // Report ID and Date
  doc.setFontSize(12);
  doc.text(`Report ID: ${report.id.substring(0, 8)}`, 20, yPosition);
  yPosition += 8;
  
  const createdDate = new Date(report.createdAt!).toLocaleDateString();
  doc.text(`Date Created: ${createdDate}`, 20, yPosition);
  yPosition += 15;
  
  // Title
  doc.setFontSize(16);
  doc.text('Issue Title:', 20, yPosition);
  yPosition += 8;
  doc.setFontSize(12);
  const titleLines = doc.splitTextToSize(report.title, 150);
  doc.text(titleLines, 20, yPosition);
  yPosition += titleLines.length * 6 + 10;
  
  // Category
  if (category) {
    doc.setFontSize(16);
    doc.text('Category:', 20, yPosition);
    yPosition += 8;
    doc.setFontSize(12);
    doc.text(category.name, 20, yPosition);
    yPosition += 15;
  }
  
  // Status
  doc.setFontSize(16);
  doc.text('Status:', 20, yPosition);
  yPosition += 8;
  doc.setFontSize(12);
  const statusText = report.status.charAt(0).toUpperCase() + report.status.slice(1).replace('_', ' ');
  doc.text(statusText, 20, yPosition);
  yPosition += 15;
  
  // Location
  if (report.address || (report.latitude && report.longitude)) {
    doc.setFontSize(16);
    doc.text('Location:', 20, yPosition);
    yPosition += 8;
    doc.setFontSize(12);
    
    if (report.address) {
      const addressLines = doc.splitTextToSize(report.address, 150);
      doc.text(addressLines, 20, yPosition);
      yPosition += addressLines.length * 6;
    }
    
    if (report.latitude && report.longitude) {
      doc.text(`Coordinates: ${report.latitude.toFixed(6)}, ${report.longitude.toFixed(6)}`, 20, yPosition);
      yPosition += 6;
    }
    yPosition += 10;
  }
  
  // Description
  doc.setFontSize(16);
  doc.text('Description:', 20, yPosition);
  yPosition += 8;
  doc.setFontSize(12);
  const descriptionLines = doc.splitTextToSize(report.description, 150);
  doc.text(descriptionLines, 20, yPosition);
  yPosition += descriptionLines.length * 6 + 15;
  
  // Media files
  if (report.mediaUrls && report.mediaUrls.length > 0) {
    doc.setFontSize(16);
    doc.text('Attached Media:', 20, yPosition);
    yPosition += 8;
    doc.setFontSize(12);
    doc.text(`${report.mediaUrls.length} file(s) attached to this report`, 20, yPosition);
    yPosition += 15;
  }
  
  // Footer
  const pageHeight = doc.internal.pageSize.height;
  doc.setFontSize(10);
  doc.text('Generated by CivicReport', 20, pageHeight - 20);
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, pageHeight - 15);
  
  // Save the PDF
  const fileName = `civic-report-${report.id.substring(0, 8)}-${createdDate.replace(/\//g, '-')}.pdf`;
  doc.save(fileName);
}